---
- name: Configure httpd with 2 virtual sites on ports 8001 and 8002
  hosts: web
  become: yes
  vars:
    config_status: {}

  vars_files:
    - vars/main.yml

  tasks:
    - name: deploy web app1 tasks
      block:
        - name: Force failure if deploy_fail is true
          ansible.builtin.fail:
            msg: "Intentional failure triggered by deploy_fail=true"
          when: deploy_fail | default(false) | bool
  
        - name: Install httpd
          ansible.builtin.yum:
            name: httpd
            state: present
    
        - name: Create document roots
          ansible.builtin.file:
            path: "/var/www/html/{{ item.name }}"
            state: directory
            owner: apache
            group: apache
            mode: '0755'
          loop: "{{ sites }}"
    
        - name: Deploy custom index.html to each site
          ansible.builtin.template:
            src: templates/index.html.j2
            dest: "/var/www/html/{{ item.name }}/index.html"
            owner: apache
            group: apache
            mode: '0644'
          loop: "{{ sites }}"
    
        - name: Create custom vhost config
          ansible.builtin.template:
            src: templates/vhost.conf.j2
            dest: /etc/httpd/conf.d/multi-site.conf
            owner: root
            group: root
            mode: '0644'
          notify: Restart httpd

        - name: Ensure Apache listens on custom ports
          ansible.builtin.lineinfile:
            path: /etc/httpd/conf/httpd.conf
            line: "Listen {{ item.port }}"
            insertafter: BOF
            state: present
          loop: "{{ sites }}"

        - name: Open ports 8001 and 8002 in firewalld
          ansible.posix.firewalld:
            port: "{{ item.port }}/tcp"
            permanent: true
            state: enabled
            immediate: true
          loop: "{{ sites }}"

        - name: Allow Apache to bind to custom ports in SELinux
          community.general.seport:
            ports: "{{ item.port }}"
            proto: tcp
            setype: http_port_t
            state: present
          loop: "{{ sites }}"

        - name: Mark deploy success for host
          ansible.builtin.set_fact:
            config_status: "{{ config_status | combine({ inventory_hostname: 'web_app_1 deploy succeeded at ' + ansible_date_time.iso8601 }) }}"

      rescue:
        - name: Mark deploy failure for host
          ansible.builtin.set_fact:
            config_status: "{{ config_status | combine({ inventory_hostname: 'web_app_1 deploy FAILED at ' + ansible_date_time.iso8601 }) }}"

        - name: Force failure to trigger workflow failure path
          ansible.builtin.fail:
            msg: "Base configuration failed on host {{ inventory_hostname }}. See config_status for details."

      always:
        - name: Aggregate config status into global ITSM message
          ansible.builtin.set_stats:
            data:
              itsm_update_message: |
                {% for host, status in config_status.items() %}
                - {{ host }}: {{ status }}
                {% endfor %}
            per_host: false
          run_once: true

  handlers:
    - name: Restart httpd
      ansible.builtin.service:
        name: httpd
        state: restarted